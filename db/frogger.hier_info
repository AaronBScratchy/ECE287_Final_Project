|frogger
clock => clock.IN2
reset => color_in[0].ACLR
reset => color_in[1].ACLR
reset => color_in[2].ALOAD
reset => color_in[3].ALOAD
reset => color_in[4].ALOAD
reset => color_in[5].ACLR
reset => color_in[6].ACLR
reset => color_in[7].ACLR
reset => E1s.E1M20.ACLR
reset => E1s.E1M19.ACLR
reset => E1s.E1M18.ACLR
reset => E1s.E1M17.ACLR
reset => E1s.E1M16.ACLR
reset => E1s.E1M15.ACLR
reset => E1s.E1M14.ACLR
reset => E1s.E1M13.ACLR
reset => E1s.E1M12.ACLR
reset => E1s.E1M11.ACLR
reset => E1s.E1M10.ACLR
reset => E1s.E1M9.ACLR
reset => E1s.E1M8.ACLR
reset => E1s.E1M7.ACLR
reset => E1s.E1M6.ALOAD
reset => E1s.E1M5.ALOAD
reset => E1s.E1M4.ALOAD
reset => E1s.E1M3.ALOAD
reset => E1s.E1M2.ALOAD
reset => E1s.E1M1.ALOAD
reset => rev_reset.IN1
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
SW[10] => ~NO_FANOUT~
SW[11] => ~NO_FANOUT~
SW[12] => ~NO_FANOUT~
SW[13] => ~NO_FANOUT~
SW[14] => ~NO_FANOUT~
SW[15] => ~NO_FANOUT~
SW[16] => ~NO_FANOUT~
SW[17] => ~NO_FANOUT~
red[0] <= vga_driver:driver.port7
red[1] <= vga_driver:driver.port7
red[2] <= vga_driver:driver.port7
red[3] <= vga_driver:driver.port7
red[4] <= vga_driver:driver.port7
red[5] <= vga_driver:driver.port7
red[6] <= vga_driver:driver.port7
red[7] <= vga_driver:driver.port7
green[0] <= vga_driver:driver.port8
green[1] <= vga_driver:driver.port8
green[2] <= vga_driver:driver.port8
green[3] <= vga_driver:driver.port8
green[4] <= vga_driver:driver.port8
green[5] <= vga_driver:driver.port8
green[6] <= vga_driver:driver.port8
green[7] <= vga_driver:driver.port8
blue[0] <= vga_driver:driver.port9
blue[1] <= vga_driver:driver.port9
blue[2] <= vga_driver:driver.port9
blue[3] <= vga_driver:driver.port9
blue[4] <= vga_driver:driver.port9
blue[5] <= vga_driver:driver.port9
blue[6] <= vga_driver:driver.port9
blue[7] <= vga_driver:driver.port9
sync <= vga_driver:driver.port10
clk <= vga_driver:driver.port11
blank <= vga_driver:driver.port12
hsync <= vga_driver:driver.port5
vsync <= vga_driver:driver.port6


|frogger|Clock_divider:clk_25_MHz
clock_in => clock_out~reg0.CLK
clock_in => counter[0].CLK
clock_in => counter[1].CLK
clock_in => counter[2].CLK
clock_in => counter[3].CLK
clock_in => counter[4].CLK
clock_in => counter[5].CLK
clock_in => counter[6].CLK
clock_in => counter[7].CLK
clock_in => counter[8].CLK
clock_in => counter[9].CLK
clock_in => counter[10].CLK
clock_in => counter[11].CLK
clock_in => counter[12].CLK
clock_in => counter[13].CLK
clock_in => counter[14].CLK
clock_in => counter[15].CLK
clock_in => counter[16].CLK
clock_in => counter[17].CLK
clock_in => counter[18].CLK
clock_in => counter[19].CLK
clock_in => counter[20].CLK
clock_in => counter[21].CLK
clock_in => counter[22].CLK
clock_in => counter[23].CLK
clock_in => counter[24].CLK
clock_in => counter[25].CLK
clock_in => counter[26].CLK
clock_in => counter[27].CLK
clock_out <= clock_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|frogger|vga_driver:driver
clock => blue_reg[0].CLK
clock => blue_reg[1].CLK
clock => blue_reg[2].CLK
clock => blue_reg[3].CLK
clock => blue_reg[4].CLK
clock => blue_reg[5].CLK
clock => blue_reg[6].CLK
clock => blue_reg[7].CLK
clock => green_reg[0].CLK
clock => green_reg[1].CLK
clock => green_reg[2].CLK
clock => green_reg[3].CLK
clock => green_reg[4].CLK
clock => green_reg[5].CLK
clock => green_reg[6].CLK
clock => green_reg[7].CLK
clock => red_reg[0].CLK
clock => red_reg[1].CLK
clock => red_reg[2].CLK
clock => red_reg[3].CLK
clock => red_reg[4].CLK
clock => red_reg[5].CLK
clock => red_reg[6].CLK
clock => red_reg[7].CLK
clock => vsync_reg.CLK
clock => hysnc_reg.CLK
clock => line_done.CLK
clock => v_counter[0].CLK
clock => v_counter[1].CLK
clock => v_counter[2].CLK
clock => v_counter[3].CLK
clock => v_counter[4].CLK
clock => v_counter[5].CLK
clock => v_counter[6].CLK
clock => v_counter[7].CLK
clock => v_counter[8].CLK
clock => v_counter[9].CLK
clock => h_counter[0].CLK
clock => h_counter[1].CLK
clock => h_counter[2].CLK
clock => h_counter[3].CLK
clock => h_counter[4].CLK
clock => h_counter[5].CLK
clock => h_counter[6].CLK
clock => h_counter[7].CLK
clock => h_counter[8].CLK
clock => h_counter[9].CLK
clock => clk.DATAIN
clock => v_state~4.DATAIN
clock => h_state~4.DATAIN
reset => h_counter.OUTPUTSELECT
reset => h_counter.OUTPUTSELECT
reset => h_counter.OUTPUTSELECT
reset => h_counter.OUTPUTSELECT
reset => h_counter.OUTPUTSELECT
reset => h_counter.OUTPUTSELECT
reset => h_counter.OUTPUTSELECT
reset => h_counter.OUTPUTSELECT
reset => h_counter.OUTPUTSELECT
reset => h_counter.OUTPUTSELECT
reset => v_counter.OUTPUTSELECT
reset => v_counter.OUTPUTSELECT
reset => v_counter.OUTPUTSELECT
reset => v_counter.OUTPUTSELECT
reset => v_counter.OUTPUTSELECT
reset => v_counter.OUTPUTSELECT
reset => v_counter.OUTPUTSELECT
reset => v_counter.OUTPUTSELECT
reset => v_counter.OUTPUTSELECT
reset => v_counter.OUTPUTSELECT
reset => h_state.OUTPUTSELECT
reset => h_state.OUTPUTSELECT
reset => h_state.OUTPUTSELECT
reset => h_state.OUTPUTSELECT
reset => v_state.OUTPUTSELECT
reset => v_state.OUTPUTSELECT
reset => v_state.OUTPUTSELECT
reset => v_state.OUTPUTSELECT
reset => line_done.OUTPUTSELECT
reset => red_reg[0].ENA
reset => green_reg[7].ENA
reset => green_reg[6].ENA
reset => green_reg[5].ENA
reset => green_reg[4].ENA
reset => green_reg[3].ENA
reset => green_reg[2].ENA
reset => green_reg[1].ENA
reset => green_reg[0].ENA
reset => blue_reg[7].ENA
reset => blue_reg[6].ENA
reset => blue_reg[5].ENA
reset => blue_reg[4].ENA
reset => blue_reg[3].ENA
reset => blue_reg[2].ENA
reset => blue_reg[1].ENA
reset => blue_reg[0].ENA
reset => red_reg[1].ENA
reset => red_reg[2].ENA
reset => red_reg[3].ENA
reset => red_reg[4].ENA
reset => red_reg[5].ENA
reset => red_reg[6].ENA
reset => red_reg[7].ENA
reset => vsync_reg.ENA
reset => hysnc_reg.ENA
color_in[0] => blue_reg.DATAB
color_in[1] => blue_reg.DATAB
color_in[2] => green_reg.DATAB
color_in[3] => green_reg.DATAB
color_in[4] => green_reg.DATAB
color_in[5] => red_reg.DATAB
color_in[6] => red_reg.DATAB
color_in[7] => red_reg.DATAB
next_x[0] <= next_x.DB_MAX_OUTPUT_PORT_TYPE
next_x[1] <= next_x.DB_MAX_OUTPUT_PORT_TYPE
next_x[2] <= next_x.DB_MAX_OUTPUT_PORT_TYPE
next_x[3] <= next_x.DB_MAX_OUTPUT_PORT_TYPE
next_x[4] <= next_x.DB_MAX_OUTPUT_PORT_TYPE
next_x[5] <= next_x.DB_MAX_OUTPUT_PORT_TYPE
next_x[6] <= next_x.DB_MAX_OUTPUT_PORT_TYPE
next_x[7] <= next_x.DB_MAX_OUTPUT_PORT_TYPE
next_x[8] <= next_x.DB_MAX_OUTPUT_PORT_TYPE
next_x[9] <= next_x.DB_MAX_OUTPUT_PORT_TYPE
next_y[0] <= next_y.DB_MAX_OUTPUT_PORT_TYPE
next_y[1] <= next_y.DB_MAX_OUTPUT_PORT_TYPE
next_y[2] <= next_y.DB_MAX_OUTPUT_PORT_TYPE
next_y[3] <= next_y.DB_MAX_OUTPUT_PORT_TYPE
next_y[4] <= next_y.DB_MAX_OUTPUT_PORT_TYPE
next_y[5] <= next_y.DB_MAX_OUTPUT_PORT_TYPE
next_y[6] <= next_y.DB_MAX_OUTPUT_PORT_TYPE
next_y[7] <= next_y.DB_MAX_OUTPUT_PORT_TYPE
next_y[8] <= next_y.DB_MAX_OUTPUT_PORT_TYPE
next_y[9] <= next_y.DB_MAX_OUTPUT_PORT_TYPE
hsync <= hysnc_reg.DB_MAX_OUTPUT_PORT_TYPE
vsync <= vsync_reg.DB_MAX_OUTPUT_PORT_TYPE
red[0] <= red_reg[0].DB_MAX_OUTPUT_PORT_TYPE
red[1] <= red_reg[1].DB_MAX_OUTPUT_PORT_TYPE
red[2] <= red_reg[2].DB_MAX_OUTPUT_PORT_TYPE
red[3] <= red_reg[3].DB_MAX_OUTPUT_PORT_TYPE
red[4] <= red_reg[4].DB_MAX_OUTPUT_PORT_TYPE
red[5] <= red_reg[5].DB_MAX_OUTPUT_PORT_TYPE
red[6] <= red_reg[6].DB_MAX_OUTPUT_PORT_TYPE
red[7] <= red_reg[7].DB_MAX_OUTPUT_PORT_TYPE
green[0] <= green_reg[0].DB_MAX_OUTPUT_PORT_TYPE
green[1] <= green_reg[1].DB_MAX_OUTPUT_PORT_TYPE
green[2] <= green_reg[2].DB_MAX_OUTPUT_PORT_TYPE
green[3] <= green_reg[3].DB_MAX_OUTPUT_PORT_TYPE
green[4] <= green_reg[4].DB_MAX_OUTPUT_PORT_TYPE
green[5] <= green_reg[5].DB_MAX_OUTPUT_PORT_TYPE
green[6] <= green_reg[6].DB_MAX_OUTPUT_PORT_TYPE
green[7] <= green_reg[7].DB_MAX_OUTPUT_PORT_TYPE
blue[0] <= blue_reg[0].DB_MAX_OUTPUT_PORT_TYPE
blue[1] <= blue_reg[1].DB_MAX_OUTPUT_PORT_TYPE
blue[2] <= blue_reg[2].DB_MAX_OUTPUT_PORT_TYPE
blue[3] <= blue_reg[3].DB_MAX_OUTPUT_PORT_TYPE
blue[4] <= blue_reg[4].DB_MAX_OUTPUT_PORT_TYPE
blue[5] <= blue_reg[5].DB_MAX_OUTPUT_PORT_TYPE
blue[6] <= blue_reg[6].DB_MAX_OUTPUT_PORT_TYPE
blue[7] <= blue_reg[7].DB_MAX_OUTPUT_PORT_TYPE
sync <= <GND>
clk <= clock.DB_MAX_OUTPUT_PORT_TYPE
blank <= blank.DB_MAX_OUTPUT_PORT_TYPE


|frogger|Clock_divider_E1:clk_E1
clock_in => clock_out~reg0.CLK
clock_in => counter[0].CLK
clock_in => counter[1].CLK
clock_in => counter[2].CLK
clock_in => counter[3].CLK
clock_in => counter[4].CLK
clock_in => counter[5].CLK
clock_in => counter[6].CLK
clock_in => counter[7].CLK
clock_in => counter[8].CLK
clock_in => counter[9].CLK
clock_in => counter[10].CLK
clock_in => counter[11].CLK
clock_in => counter[12].CLK
clock_in => counter[13].CLK
clock_in => counter[14].CLK
clock_in => counter[15].CLK
clock_in => counter[16].CLK
clock_in => counter[17].CLK
clock_in => counter[18].CLK
clock_in => counter[19].CLK
clock_in => counter[20].CLK
clock_in => counter[21].CLK
clock_in => counter[22].CLK
clock_in => counter[23].CLK
clock_in => counter[24].CLK
clock_in => counter[25].CLK
clock_in => counter[26].CLK
clock_in => counter[27].CLK
clock_out <= clock_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


